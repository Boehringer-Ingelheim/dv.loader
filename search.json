[{"path":"/articles/loading-data-into-memory.html","id":"using-load_data","dir":"Articles","previous_headings":"","what":"Using load_data()","title":"Loading Data into Memory","text":"load_data() function requires RXD_DATA environment variable set base directory containing data files. variable defines root path subdirectories searched. call load_data(), searches specified subdirectory data files returns named list data frames. data frame list named source file. files exist .rds .sas7bdat formats, load_data() load .rds version default since compact faster read. can override behavior setting prefer_sas = TRUE prioritize loading .sas7bdat files instead.","code":"# Set the RXD_DATA environment variable to the temporary directory Sys.setenv(RXD_DATA = temp_dir)  # Load the data files into a named list of data frames data_list1 <- load_data(   sub_dir = \".\",   file_names = c(\"cars\", \"mtcars\") )  # Display the structure of the resulting list str(data_list1) #> List of 2 #>  $ cars  :'data.frame':  50 obs. of  2 variables: #>   ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ... #>   ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ... #>   ..- attr(*, \"meta\")='data.frame':  1 obs. of  8 variables: #>   .. ..$ size     : num 289 #>   .. ..$ isdir    : logi FALSE #>   .. ..$ mode     : 'octmode' int 644 #>   .. ..$ mtime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ ctime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ atime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ path     : chr \"/tmp/RtmpY9zViA/./cars.rds\" #>   .. ..$ file_name: chr \"cars.rds\" #>  $ mtcars:'data.frame':  32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>   ..- attr(*, \"meta\")='data.frame':  1 obs. of  8 variables: #>   .. ..$ size     : num 1225 #>   .. ..$ isdir    : logi FALSE #>   .. ..$ mode     : 'octmode' int 644 #>   .. ..$ mtime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ ctime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ atime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ path     : chr \"/tmp/RtmpY9zViA/./mtcars.rds\" #>   .. ..$ file_name: chr \"mtcars.rds\""},{"path":"/articles/loading-data-into-memory.html","id":"using-load_files","dir":"Articles","previous_headings":"","what":"Using load_files()","title":"Loading Data into Memory","text":"load_files() function accepts explicit file paths loads named list data frames. data frame includes metadata attribute. custom names provided, function use file names (without paths extensions) list names. using load_files(), can specify files multiple directories customize output list names providing named arguments file_paths parameter.","code":"# Load the data files into a named list of data frames data_list2 <- load_files(   file_paths = c(     file.path(temp_dir, \"cars.rds\"),     file.path(temp_dir, \"mtcars.rds\")   ) )  # Display the structure of the resulting list str(data_list2) #> List of 2 #>  $ cars  :'data.frame':  50 obs. of  2 variables: #>   ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ... #>   ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ... #>   ..- attr(*, \"meta\")='data.frame':  1 obs. of  8 variables: #>   .. ..$ size     : num 289 #>   .. ..$ isdir    : logi FALSE #>   .. ..$ mode     : 'octmode' int 644 #>   .. ..$ mtime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ ctime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ atime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ path     : chr \"/tmp/RtmpY9zViA/cars.rds\" #>   .. ..$ file_name: chr \"cars.rds\" #>  $ mtcars:'data.frame':  32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>   ..- attr(*, \"meta\")='data.frame':  1 obs. of  8 variables: #>   .. ..$ size     : num 1225 #>   .. ..$ isdir    : logi FALSE #>   .. ..$ mode     : 'octmode' int 644 #>   .. ..$ mtime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ ctime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ atime    : POSIXct[1:1], format: \"2025-07-15 09:12:40\" #>   .. ..$ path     : chr \"/tmp/RtmpY9zViA/mtcars.rds\" #>   .. ..$ file_name: chr \"mtcars.rds\" dv.loader::load_files(   file_paths = c(     \"cars (rds)\" = file.path(temp_dir, \"cars.rds\"),     \"iris (sas)\" = system.file(\"examples\", \"iris.sas7bdat\", package = \"haven\")   ) ) |> names() #> [1] \"cars (rds)\" \"iris (sas)\""},{"path":"/articles/qc.html","id":"dv-loader-2-1-1","dir":"Articles","previous_headings":"","what":"✅ dv.loader 2.1.1","title":"Quality Control","text":"Date: 2025-Jul-15 09:12:43 following document generates report R packages, satisfy criteria “Released” status Non-GxP project. QC report contains following information: Specifications (specs): can attached every test user adds. Traceability matrix: Contains test cases passed, failed, skipped expectations. Uncovered undeclared specs Session Info System Configuration Please advised QC report generated module imply validation according GxP criteria. QC report satisfies internally developed quality checks non-GxP criteria. clinical reporting purposes, essential note outputs generated using module must checked verified within validated system adheres appropriate GxP guidelines.","code":""},{"path":"/articles/qc.html","id":"traceability-matrix","dir":"Articles","previous_headings":"","what":"Traceability matrix","title":"Quality Control","text":"traceability matrix tests point specification included. Test cases can contain several expectations test considered: passed expectations test pass. failed least one expectation test fails. skipped least one expectation test skipped. test can failed skipped.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/qc.html","id":"undeclared-specifications","dir":"Articles","previous_headings":"Traceability matrix","what":"Undeclared specifications","title":"Quality Control","text":"always empty, non existant specs controlled test execution.","code":""},{"path":"/articles/qc.html","id":"session-info-and-system-configuration","dir":"Articles","previous_headings":"","what":"Session Info and System Configuration","title":"Quality Control","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.4.1 (2024-06-14) #>  os       Ubuntu 22.04.5 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       Etc/UTC #>  date     2025-07-15 #>  pandoc   3.6.4 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  bslib         0.8.0   2024-07-29 [2] RSPM #>  cachem        1.1.0   2024-05-16 [2] RSPM #>  cli           3.6.3   2024-06-21 [2] RSPM #>  crosstalk     1.2.1   2023-11-23 [2] RSPM #>  desc          1.4.3   2023-12-10 [2] RSPM #>  devtools      2.4.5   2022-10-11 [2] RSPM #>  digest        0.6.37  2024-08-19 [2] RSPM #>  DT            0.33    2024-04-04 [2] RSPM #>  ellipsis      0.3.2   2021-04-29 [2] RSPM #>  evaluate      1.0.1   2024-10-10 [2] RSPM #>  fastmap       1.2.0   2024-05-15 [2] RSPM #>  fs            1.6.4   2024-04-25 [2] RSPM #>  glue          1.8.0   2024-09-30 [2] RSPM #>  htmltools     0.5.8.1 2024-04-04 [2] RSPM #>  htmlwidgets   1.6.4   2023-12-06 [2] RSPM #>  httpuv        1.6.15  2024-03-26 [2] RSPM #>  jquerylib     0.1.4   2021-04-26 [2] RSPM #>  jsonlite      1.8.9   2024-09-20 [2] RSPM #>  knitr         1.48    2024-07-07 [2] RSPM #>  later         1.3.2   2023-12-06 [2] RSPM #>  lifecycle     1.0.4   2023-11-07 [2] RSPM #>  magrittr      2.0.3   2022-03-30 [2] RSPM #>  memoise       2.0.1   2021-11-26 [2] RSPM #>  mime          0.12    2021-09-28 [2] RSPM #>  miniUI        0.1.1.1 2018-05-18 [2] RSPM #>  pkgbuild      1.4.5   2024-10-28 [2] RSPM #>  pkgdown       2.1.1   2024-09-17 [2] RSPM #>  pkgload       1.4.0   2024-06-28 [2] RSPM #>  profvis       0.4.0   2024-09-20 [2] RSPM #>  promises      1.3.0   2024-04-05 [2] RSPM #>  purrr         1.0.2   2023-08-10 [2] RSPM #>  R6            2.5.1   2021-08-19 [2] RSPM #>  ragg          1.3.3   2024-09-11 [2] RSPM #>  Rcpp          1.0.13  2024-07-17 [2] RSPM #>  remotes       2.5.0   2024-03-17 [2] RSPM #>  rlang         1.1.4   2024-06-04 [2] RSPM #>  rmarkdown     2.28    2024-08-17 [2] RSPM #>  sass          0.4.9   2024-03-15 [2] RSPM #>  sessioninfo   1.2.2   2021-12-06 [2] RSPM #>  shiny         1.9.1   2024-08-01 [2] RSPM #>  systemfonts   1.1.0   2024-05-15 [2] RSPM #>  textshaping   0.4.0   2024-05-24 [2] RSPM #>  urlchecker    1.0.1   2021-11-30 [2] RSPM #>  usethis       3.0.0   2024-07-29 [2] RSPM #>  vctrs         0.6.5   2023-12-01 [2] RSPM #>  xfun          0.48    2024-10-03 [2] RSPM #>  xtable        1.8-4   2019-04-21 [2] RSPM #>  yaml          2.3.10  2024-07-26 [2] RSPM #>  #>  [1] /tmp/RtmpD46YOZ/temp_libpath2ad13457e4b #>  [2] /usr/local/lib/R/site-library #>  [3] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Boehringer-Ingelheim Pharma GmbH & Co.KG. Copyright holder, funder. Ming Yang. Author, maintainer. Steven Brooks. Author. Sorin Voicu. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yang M, Brooks S, Voicu S (2025). dv.loader: Data loading module. R package version 2.1.1.","code":"@Manual{,   title = {dv.loader: Data loading module},   author = {Ming Yang and Steven Brooks and Sorin Voicu},   year = {2025},   note = {R package version 2.1.1}, }"},{"path":"/index.html","id":"data-loading","dir":"","previous_headings":"","what":"dv.loader","title":"dv.loader","text":"dv.loader package provides two functions loading .rds .sas7bdat files R. load_data(): loads data files specified subdirectory base path defined environment variable “RXD_DATA”. function useful working data files stored centralized location. load_files(): accepts explicit file paths load data files location system. can optionally provide custom names data frames returned list.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"dv.loader","text":"dv.loader package available GitHub. install , can use following commands: installation, can load package using:","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"Boehringer-Ingelheim/dv.loader\") library(dv.loader)"},{"path":[]},{"path":"/index.html","id":"using-load_data","dir":"","previous_headings":"Basic Usage","what":"Using load_data()","title":"dv.loader","text":"load_data() function loads data specified subdirectory relative RXD_DATA. file_names argument, can optionally specify file extensions names. provided, function attempt search .rds .sas7bdat files subdirectory decide one load based prefer_sas argument file types present. default, prefer_sas FALSE, meaning .rds files preferred due smaller file size faster loading time.","code":"# Set the RXD_DATA environment variable Sys.setenv(RXD_DATA = \"path/to/data/folder\")  # Load data from path/to/data/folder/subdir1 load_data(     sub_dir = \"subdir1\",     file_names = c(\"file1\", \"file2\"),     prefer_sas = TRUE )  # Load data from path/to/data/folder/subdir1/subdir2 load_data(     sub_dir = \"subdir1/subdir2\",     file_names = c(\"file1.rds\", \"file2.sas7bdat\"), )"},{"path":"/index.html","id":"using-load_files","dir":"","previous_headings":"Basic Usage","what":"Using load_files()","title":"dv.loader","text":"load_files() function requires provide explicit file paths including file extensions data files want load. can optionally provide custom names data frames returned list. details, please refer package vignettes function documentation.","code":"# Load data files with default names load_files(     file_paths = c(         \"path/to/file1.rds\",         \"path/to/file2.sas7bdat\"     ) )  # Load data files with custom names load_files(     file_paths = c(         \"file1 (rds)\" = \"path/to/file1.rds\",         \"file2 (sas)\" = \"path/to/file2.sas7bdat\"     ) )"},{"path":"/reference/create_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"For each file name provided, reads in the first matching file and its meta data/attributes. Preference is given to RDS because its faster — create_data_list","title":"For each file name provided, reads in the first matching file and its meta data/attributes. Preference is given to RDS because its faster — create_data_list","text":"file name provided, reads first matching file meta data/attributes. Preference given RDS faster","code":""},{"path":"/reference/create_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For each file name provided, reads in the first matching file and its meta data/attributes. Preference is given to RDS because its faster — create_data_list","text":"","code":"create_data_list(file_path, file_names, prefer_sas)"},{"path":"/reference/create_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For each file name provided, reads in the first matching file and its meta data/attributes. Preference is given to RDS because its faster — create_data_list","text":"file_path folder files file_names CDISC names files prefer_sas TRUE, imports .sas7bdat files first instead .RDS files","code":""},{"path":"/reference/create_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For each file name provided, reads in the first matching file and its meta data/attributes. Preference is given to RDS because its faster — create_data_list","text":"returns list dataframes metadata attribute dataframe","code":""},{"path":"/reference/get_cre_path.html","id":null,"dir":"Reference","previous_headings":"","what":"gets the NFS base path from an env var alias for get_nfs_path to maintain backwards compatibility — get_cre_path","title":"gets the NFS base path from an env var alias for get_nfs_path to maintain backwards compatibility — get_cre_path","text":"gets NFS base path env var alias get_nfs_path maintain backwards compatibility","code":""},{"path":"/reference/get_cre_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gets the NFS base path from an env var alias for get_nfs_path to maintain backwards compatibility — get_cre_path","text":"","code":"get_cre_path()"},{"path":"/reference/get_nfs_path.html","id":null,"dir":"Reference","previous_headings":"","what":"gets the NFS base path from an env var It assumes there is an env var called RXD_DATA which holds the path suffix. — get_nfs_path","title":"gets the NFS base path from an env var It assumes there is an env var called RXD_DATA which holds the path suffix. — get_nfs_path","text":"gets NFS base path env var assumes env var called RXD_DATA holds path suffix.","code":""},{"path":"/reference/get_nfs_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gets the NFS base path from an env var It assumes there is an env var called RXD_DATA which holds the path suffix. — get_nfs_path","text":"","code":"get_nfs_path()"},{"path":"/reference/get_nfs_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gets the NFS base path from an env var It assumes there is an env var called RXD_DATA which holds the path suffix. — get_nfs_path","text":"NFS base path","code":""},{"path":"/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads data into memory based on study directory and one or more file_names. — load_data","title":"Loads data into memory based on study directory and one or more file_names. — load_data","text":"Loads data memory based study directory one file_names.","code":""},{"path":"/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads data into memory based on study directory and one or more file_names. — load_data","text":"","code":"load_data(sub_dir = NULL, file_names, use_wd = FALSE, prefer_sas = FALSE)"},{"path":"/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads data into memory based on study directory and one or more file_names. — load_data","text":"sub_dir relative directory/folder appended base path defined `Sys.getenv(\"RXD_DATA\")`. argument left NULL, function load data working directory `getwd()`. file_names Study file file_names name(s) - can vector strings. required argument. use_wd \"use working directory\" - flag used importing local files NFS - default value FALSE prefer_sas set TRUE, imports sas7bdat files first looking RDS files (opposite default behavior)","code":""},{"path":"/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads data into memory based on study directory and one or more file_names. — load_data","text":"list dataframes","code":""},{"path":"/reference/load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads data into memory based on study directory and one or more file_names. — load_data","text":"","code":"if (FALSE) { # \\dontrun{ test_data_path <- \"../inst/extdata/\" data_list <- load_data(   sub_dir = test_data_path,   file_names = \"dummyads2\",   use_wd = TRUE ) } # }"},{"path":"/reference/load_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data files from explicit paths — load_files","title":"Load data files from explicit paths — load_files","text":"Read data provided paths return list data frames. Supports .rds .sas7bdat formats.","code":""},{"path":"/reference/load_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data files from explicit paths — load_files","text":"","code":"load_files(file_paths)"},{"path":"/reference/load_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data files from explicit paths — load_files","text":"file_paths [character(1+)] Files read. Optionally named.","code":""},{"path":"/reference/load_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data files from explicit paths — load_files","text":"[list] named list data frames, name either:  - name associated element `file_paths` argument, , provided...  - name file , stripping leading path trailing extension","code":""},{"path":"/reference/read_file_and_attach_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a data file and attach metadata — read_file_and_attach_metadata","title":"Read a data file and attach metadata — read_file_and_attach_metadata","text":"Reads .rds .sas7bdat file given path attaches metadata file attribute.","code":""},{"path":"/reference/read_file_and_attach_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a data file and attach metadata — read_file_and_attach_metadata","text":"","code":"read_file_and_attach_metadata(path)"},{"path":"/reference/read_file_and_attach_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a data file and attach metadata — read_file_and_attach_metadata","text":"path [character(1)] Path data file read","code":""},{"path":"/reference/read_file_and_attach_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a data file and attach metadata — read_file_and_attach_metadata","text":"data frame metadata attached attribute named \"meta\".","code":""},{"path":"/news/index.html","id":"dvloader-211","dir":"Changelog","previous_headings":"","what":"dv.loader 2.1.1","title":"dv.loader 2.1.1","text":"Faster loading large SAS files high latency media (e.g. network shares).","code":""},{"path":"/news/index.html","id":"dvloader-210","dir":"Changelog","previous_headings":"","what":"dv.loader 2.1.0","title":"dv.loader 2.1.0","text":"Added load_files() load data using explicit file paths.","code":""},{"path":"/news/index.html","id":"dvloader-200","dir":"Changelog","previous_headings":"","what":"dv.loader 2.0.0","title":"dv.loader 2.0.0","text":"GitHub release QC report Update package documentation","code":""},{"path":"/news/index.html","id":"dvloader-111","dir":"Changelog","previous_headings":"","what":"dv.loader 1.1.1","title":"dv.loader 1.1.1","text":"General package maintenance.","code":""},{"path":"/news/index.html","id":"dvloader-110","dir":"Changelog","previous_headings":"","what":"dv.loader 1.1.0","title":"dv.loader 1.1.0","text":"Bugfix release disables problematic dv.loader::load_data file name partial matching.","code":""},{"path":"/news/index.html","id":"dvloader-100","dir":"Changelog","previous_headings":"","what":"dv.loader 1.0.0","title":"dv.loader 1.0.0","text":"First release","code":""},{"path":"/news/index.html","id":"dvloader-051-with-breaking-changes","dir":"Changelog","previous_headings":"","what":"dv.loader 0.5.1 (with breaking changes)","title":"dv.loader 0.5.1 (with breaking changes)","text":"Major changes first release Changed name package “dataloader” “dv.loader” avoid CRAN collision Changed domains paramater name throughout file_names Changed study_dir paramater name throughout sub_dir, used reference sub directory get_cre_path. code coverage > 93% refactored tests use BDD","code":""},{"path":"/news/index.html","id":"dvloader-050","dir":"Changelog","previous_headings":"","what":"dv.loader 0.5.0","title":"dv.loader 0.5.0","text":"Refactored take OOP design. Now just use functions directly without create “dataloader” object. E.g., attr(df, \"meta\") view.","code":""},{"path":"/news/index.html","id":"dvloader-041","dir":"Changelog","previous_headings":"","what":"dv.loader 0.4.1","title":"dv.loader 0.4.1","text":"package style changed camelCase snake_case better documentation added examples","code":""},{"path":"/news/index.html","id":"dvloader-040","dir":"Changelog","previous_headings":"","what":"dv.loader 0.4.0","title":"dv.loader 0.4.0","text":"API dataloader changed considerably. Now three public functions: loadData() bringing data memory now creates new “attr” attributes table containing column-level attributes files read keyed table (domain) name. getTableRefs() retrieving list table references DB connection Support indexing SQLite DB added. elements list domain names values elements character vectors representing columns want indexed check result “sqlite_stat1” metatable retrieved getTableRefs()","code":""},{"path":"/news/index.html","id":"dvloader-031","dir":"Changelog","previous_headings":"","what":"dv.loader 0.3.1","title":"dv.loader 0.3.1","text":"specify useDB = T ’s existing database file, load_data() connect , return tables. load_data() check existing DB based users input dbFileName. left NULL, use default name based studyDir, NULL, use db. Otherwise, just create new database (useDB = T). API read_file() changed. longer need specify isRDS. function figure based file_name passed .","code":""},{"path":"/news/index.html","id":"dvloader-030","dir":"Changelog","previous_headings":"","what":"dv.loader 0.3.0","title":"dv.loader 0.3.0","text":"data.loader now called dataloader dataloader’s local DB functionality now passing unit tests, meaning integrity data flow producing system (CARE) ensured. output load_data() databases includes attributes original file. , even attributes lost data loaded database, can recover . recover given column dataframe: load_data() default returns list named file_names passed, containing dataframes, along metadata table. Create DB table connection (created dplyr::tbl(dl$dbConn, “myDomain”)) using useDB = T load_data(). set_base_path() removed, base_path attribute now private restrict CARE module can access. arg mandatory file_names. studyDir left null, just uses working directory default.","code":"attr <- dataList[[\"attr\"]] attr_adsl <- attr[\"adlb\"] attr_adsl_studyid <- attr[[\"adlb\"]][[\"STUDYID\"]] attr_adsl_studyid # $label # [1] \"Study Identifier\" # # $format.sas # [1] \"$\""},{"path":"/news/index.html","id":"dvloader-021","dir":"Changelog","previous_headings":"","what":"dv.loader 0.2.1","title":"dv.loader 0.2.1","text":"data.loader now supports creation local SQL databases managing large files. Users interact db_conn connection using DBI package, found CRAN. Usage detailed benchmarking section. Also, internally, load_data() function refactored separate importing data creation local database. dv.loader also fixes bug user provide “/” front studyDir arg, wouldn’t able find right path. isLocal load_data() API replaced useWD (“use working directory”) make sense. flag prefering SAS files RDS files added load_data()","code":""},{"path":"/news/index.html","id":"dvloader-020","dir":"Changelog","previous_headings":"","what":"dv.loader 0.2.0","title":"dv.loader 0.2.0","text":"data.loader now R6 class internal scoping base_path. way, users can change “working directory” data loader module without affecting working directory global environment. new function available called set_base_path() purpose. See usage create “dataloader” object. Otherwise, usage V0.1.0.","code":""},{"path":"/news/index.html","id":"dvloader-010","dir":"Changelog","previous_headings":"","what":"dv.loader 0.1.0","title":"dv.loader 0.1.0","text":"Initial commit. data.loader functions load_data(studyDir, file_names) set_base_path().","code":""}]
